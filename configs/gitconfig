[init]
  defaultBranch = main
  templatedir = ~/.git_template/template
[push]
  default = current
[color]
  ui = auto
[alias]
  aa = add --all
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ca = commit --amend -v
  cam = commit -am
  cm = commit -m
  ci = commit -v
  co = checkout
  cundo = reset --soft HEAD
  st = status
  softreset = reset --soft HEAD~
  softcommit = commit -C ORIG_HEAD
  rh = fetch --all; reset --head origin/master
  rh = !git fetch --all && git reset --hard origin/master
  update-from = "!f() { git fetch $1 --prune; git merge --ff-only $1/$2 || git rebase --preserve-merges $1/$2; }; f"
  commend = commit --amend --no-edit'
  shorty = status --short --branch
[core]
  excludesfile = ~/.gitignore
  autocrlf = true
  text = auto
  eol = lf
[merge]
  ff = only
  tool = diffmerge
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
[rebase]
  autosquash = true
[include]
  path = ~/.gitconfig.local
[user]
  username = JeremyDwayne
  email = jeremy@jeremydwayne.com
  name = Jeremy Winterberg
[diff]
  compactionHeuristic = true
  tool = diffmerge
  colorMoved = zebra
[difftool "diffmerge"]
  cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
  cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
  trustExitCode = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[pull]
  rebase = true
