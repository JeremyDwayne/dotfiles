- name: "Git | Install Git"
  community.general.homebrew:
    name: git
    state: present

- name: "Git | Install GPG"
  community.general.homebrew:
    name: gpg
    state: present

- name: "Git | Set diff.colorMoved"
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: zebra

- name: "Git | Set fetch.prune"
  community.general.git_config:
    name: fetch.prune
    scope: global
    value: true

- name: "Git | Set init.defaultBranch"
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: main

- name: "Git | Set pull.rebase"
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: true

- name: "Git | Set rebase.autoStash"
  community.general.git_config:
    name: rebase.autoStash
    scope: global
    value: true

- name: "Git | Set user.email"
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  no_log: true

- name: "Git | Set user.name"
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

- name: "Git | Set Git Aliases"
  community.general.git_config:
    name: "alias.{{ item.key }}"
    scope: global
    value: "{{ item.value }}"
  loop: "{{ aliases | dict2items }}"
  vars:
    aliases:
      aa: add --all
      ap: add --patch
      branches: "for-each-ref --sort=-committerdate --format='%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)' refs/remotes"
      ca: commit --amend -v
      cam: commit -am
      cm: commit -m
      co: checkout
      commend: commit --amend --no-edit'
      conflicts: "!$EDITOR $(git diff --name-only --diff-filter=U)"
      cundo: reset --soft HEAD^
      cv: commit -v
      rh: fetch --all; reset --head origin/main
      shorty: status --short --branch
      st: status
      sync: git fetch && git merge main --ff

- name: "Git | Move ~/.config/git/gitmessage"
  ansible.builtin.copy:
    src: gitmessage
    dest: "{{ ansible_user_dir }}/.config/git/gitmessage"
    mode: "0600"

- name: "Git | Set commit.template"
  community.general.git_config:
    name: commit.template
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/gitmessage"

- name: "Git | Set user.signingkey"
  community.general.git_config:
    name: user.signingkey
    scope: global
    value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

- name: "Git | Set gpg.format"
  community.general.git_config:
    name: gpg.format
    scope: global
    value: ssh

- name: "Git | Set commit.gpgsign"
  community.general.git_config:
    name: commit.gpgsign
    scope: global
    value: true

- name: "Git | Set tag.gpgsign"
  community.general.git_config:
    name: tag.gpgsign
    scope: global
    value: true

- name: "Git | Ensure ~/.config/git/allowed_signers exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/git"
    state: directory
    mode: "0755"

- name: "Git | Configure ~/.config/git/allowed_signers"
  ansible.builtin.copy:
    src: allowed_signers
    dest: "{{ ansible_user_dir }}/.config/git/allowed_signers"
    mode: "0600"

- name: "Git | Set gpg.ssh.allowedSignersFile"
  community.general.git_config:
    name: gpg.ssh.allowedSignersFile
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/allowed_signers"
